Backend layer /Unix process /
DB
API/Business 
Microservice Layer 
COmmunication layer 
UI/web/Mobile 

HTTP : 
1. Request Header , request parameter 
2. Request Body 

UTF-8

---------------
url path = /table/bugs
GET 
Output Response body = JSON 
data type : BUGs

{
  "id": 1,
  "title": "this is a bug",
  "summary": "Sample Bug",
  "exceptions": "Exception Is not present",
  "comments": "Comments ",
  "foundDateTime": "1st december",
  "tags": "New, On production",
  "priority": "High",
  "servility": "Blocker",
  "attachmentPath": "http://",
  "description": "Sampel Data "
}


TCs : 
a. Happy path 
-> All valid values 
b. Boundary Values => 
-> All parameters at end of data types..
-> Long , for id 
-> Limit of String  (titile and all others ),.. 512, 1024, 
-> 
c. Exceptions => http error 
-> Excedding all boundery values 
-> Wrong Parameter => No test case 
-> Wrong Authentication (shantonu, 123456)
-> wrong credentials, null credentials, spatial character credentials, SQL injection  
-> HTTPs request , 
-> Wrong Request headers 
-> Wrong URL parameters 

a. Request Headeres /invalids
->
b. Request Parameter /invalids
-> 

--- 

Create Bug : 
url path = /table/bugs
POST 
Input Body = JSON 
input data Type = BUG
Output Response body = JSON 
data type : BUG

TCs : 
a. Happy path 
-> All valid values 
b. Boundary Values => 
-> All parameters at end of data types..
-> Long , for id 
-> Limit of String  (titile and all others ),.. 512, 1024, 
-> 
c. Exceptions => http error 
-> Excedding all boundery values 
-> Wrong Parameter => No test case 
-> Wrong Authentication (shantonu, 123456)
-> wrong credentials, null credentials, spatial character credentials, SQL injection  
-> HTTPs request , 
- Invalid request body : 
-> Invalid data type inside BUG
-> Invalid data type : add more fields or remove any required field 

a. Request Headeres /invalids
->
b. Request Parameter /invalids
->  

